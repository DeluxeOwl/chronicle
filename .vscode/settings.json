{
    "editor.formatOnSave": true,
    "editor.insertSpaces": false,
    "explorer.fileNesting.patterns": {
        // "*.go": "$(capture)_*.go", // I can't decide
        "*.go": "",
    },
    "yaml.schemas": {
        "https://taskfile.dev/schema.json": [
            "**/Taskfile.yml"
        ],
        "https://gist.githubusercontent.com/sargunv/c2ca41a08391cd06feaad97aece309e4/raw/empty-json-schema.json": [
            ".commitlintrc.yml"
        ]
    },
    "go.useLanguageServer": true,
    // Backend configuration
    "go.lintTool": "golangci-lint",
    // Note: --fast disables some linters, like the exhaustive one
    // "go.lintFlags": [
    //     "--fast",
    // ],
    // Note: doesnt work with vscode with workspace (?) but it typechecks with errors if its file only
    // Note: I found that this needs to be package (default) to work in the polyrepo
    "go.lintOnSave": "package",
    // Note: --stdin is needed
    "go.formatTool": "custom",
    "go.formatFlags": [
        "fmt",
        "--stdin"
    ],
    "go.alternateTools": {
        "customFormatter": "${workspaceFolder}/.devbox/nix/profile/default/bin/golangci-lint",
        // Note: really important that the relative-path-mode is wd in .golangci.yaml
        "golangci-lint": "${workspaceFolder}/.devbox/nix/profile/default/bin/golangci-lint",
        "go": "${workspaceFolder}/.devbox/nix/profile/default/bin/go",
        "gopls": "${workspaceFolder}/.devbox/nix/profile/default/bin/gopls",
    },
}